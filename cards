<div class="blend-oracle-section" 
     style="--section-bg-color: {{ section.settings.section_background_color }};
            --card-closed-bg: {{ section.settings.card_closed_background }};
            --card-border-color: {{ section.settings.card_border_color }};
            --card-glow-color: {{ section.settings.card_glow_color }};
            --card-title-color: {{ section.settings.card_title_color }};
            --card-body-color: {{ section.settings.card_body_color }};
            --card-title-size: {{ section.settings.card_title_size | times: 0.85 }}px;
            --card-body-size: {{ section.settings.card_body_size | times: 0.85 }}px;
            --card-border-radius: {{ section.settings.card_border_radius }}px;
            --card-padding: {{ section.settings.card_padding }}px;
            --text-color: {{ section.settings.text_color }};
            --btn-bg-color: {{ section.settings.btn_background_color }};
            --btn-text-color: {{ section.settings.btn_text_color }};
            --btn-border-color: {{ section.settings.btn_border_color }};
            --btn-border-width: {{ section.settings.btn_border_width }}px;
            --btn-text-size: {{ section.settings.btn_text_size }}px;
            --btn-padding-h: {{ section.settings.btn_padding_horizontal }}px;
            --btn-padding-v: {{ section.settings.btn_padding_vertical }}px;
            --btn-spacing: {{ section.settings.btn_spacing }}px;
            --shine-color-1: {{ section.settings.shine_color_1 }};
            --shine-color-2: {{ section.settings.shine_color_2 }};
            --shine-opacity: {{ section.settings.shine_opacity }};
            --shine-duration: {{ section.settings.shine_duration }}s;">
  
  <div class="oracle-container">
    {% if section.settings.section_title %}
      <h2 class="oracle-title">{{ section.settings.section_title }}</h2>
    {% endif %}
    {% if section.settings.section_subtitle %}
      <p class="oracle-subtitle">{{ section.settings.section_subtitle }}</p>
    {% endif %}

    <div class="card-deck-container">
      <div class="card-deck" data-card-count="{{ section.blocks.size }}">
        {% for block in section.blocks %}
          <div class="oracle-card" 
               data-card-id="{{ forloop.index }}"
               data-blend-name="{{ block.settings.blend_name }}"
               data-reflection="{{ block.settings.reflection_text }}"
               data-cta-text="{{ block.settings.cta_text }}"
               data-cta-link="{{ block.settings.cta_link }}"
               data-open-title="{{ block.settings.open_card_title }}"
               data-open-content="{{ block.settings.open_card_content }}"
               {{ block.shopify_attributes }}>
            
            <div class="card-back">
              {% if block.settings.card_back_image %}
                <img src="{{ block.settings.card_back_image | img_url: '200x200' }}" alt="Card Back" class="card-back-img">
              {% else %}
                <div class="card-sigil">✦</div>
              {% endif %}
            </div>
            
            <div class="card-front" style="background: {{ block.settings.card_open_background }};">
              <div class="card-content">
                <h3 class="blend-name">{{ block.settings.open_card_title | default: block.settings.blend_name }}</h3>
                <div class="card-body">{{ block.settings.open_card_content | default: block.settings.reflection_text }}</div>
                {% if block.settings.cta_text and block.settings.cta_link %}
                  <a href="{{ block.settings.cta_link }}" class="oracle-cta">{{ block.settings.cta_text }}</a>
                {% endif %}
              </div>
            </div>
          </div>
        {% endfor %}
      </div>
    </div>

    {% if section.settings.show_reshuffle %}
      <button class="reshuffle-btn">{{ section.settings.reshuffle_text | default: 'Reshuffle' }}</button>
    {% endif %}
  </div>
</div>

<style>
.blend-oracle-section { background: var(--section-bg-color); padding: 10px 20px; text-align: center; }
.oracle-title { font-size: clamp(2rem, 5vw, 3rem); font-weight: 700; color: var(--text-color); margin-bottom: 0.5rem; }
.oracle-subtitle { font-size: clamp(1rem, 2vw, 1.2rem); color: var(--text-color); margin-bottom: 2rem; }

.card-deck { display: flex; flex-wrap: wrap; justify-content: center; gap: 20px; }
.oracle-card { width: 180px; min-height: 280px; cursor: pointer; perspective: 1000px; position: relative; }

.card-front,
.card-back {
  position: absolute; width: 100%; height: 100%;
  backface-visibility: hidden; border-radius: var(--card-border-radius);
  overflow: hidden; box-sizing: border-box;
  display: flex; flex-direction: column; align-items: center; justify-content: center;
  text-align: center; padding: var(--card-padding);
  transition: transform 0.4s ease;
}

.card-back { background: var(--card-closed-bg); }
.card-front { transform: rotateY(180deg); }

.oracle-card.flipped .card-front { transform: rotateY(0deg); }
.oracle-card.flipped .card-back { transform: rotateY(180deg); }

.card-content { width: 100%; display: flex; flex-direction: column; align-items: center; justify-content: center; gap: 0.5rem; }
.blend-name { font-size: var(--card-title-size); color: var(--card-title-color); font-weight: 600; }
.card-body { font-size: var(--card-body-size); color: var(--card-body-color); line-height: 1.4; word-wrap: break-word; }
.oracle-cta { margin-top: 0.5rem; display: inline-block; padding: 8px 16px; background: var(--btn-bg-color); color: var(--btn-text-color); border: var(--btn-border-width) solid var(--btn-border-color); border-radius: 20px; text-decoration: none; font-size: var(--btn-text-size); }

.reshuffle-btn { margin-top: var(--btn-spacing); padding: var(--btn-padding-v) var(--btn-padding-h); border-radius: 30px; background: var(--btn-bg-color); color: var(--btn-text-color); border: var(--btn-border-width) solid var(--btn-border-color); font-size: var(--btn-text-size); cursor: pointer; }

.card-back-img { max-width: 80%; max-height: 80%; }

/* Card corners like playing cards */
.card-corner {
  position: absolute;
  font-size: 16px;
  font-weight: 700;
  font-family: 'Arial', 'Helvetica', sans-serif;
  -webkit-font-smoothing: antialiased;
  text-rendering: geometricPrecision;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 2px;
}
.card-corner.top-left { top: 6px; left: 6px; transform: rotate(0deg); }
.card-corner.bottom-right { bottom: 6px; right: 6px; transform: rotate(180deg); }

/* Colors: hearts/diamonds red, spades/clubs black with variation */
.card-corner .suit.heart,
.card-corner .suit.diamond { color: black !important; }

.oracle-card.shuffling {
  transform: rotateY(90deg) translateY(-20px) rotateZ(calc(-10deg + var(--shuffle-rotation) * 20deg));
  transition: transform 0.3s ease;
}

@media(max-width:768px){
  .card-deck { flex-wrap: wrap; justify-content: center; gap: 15px; }
  .oracle-card { width: calc(50% - 10px); }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const cards = Array.from(document.querySelectorAll('.oracle-card'));
  const reshuffleBtn = document.querySelector('.reshuffle-btn');
  let activeCard = null;

  // assign shuffle rotation
  cards.forEach((card, index) => {
    card.style.setProperty('--shuffle-rotation', index / (cards.length - 1 || 1));
  });

  // flip logic
  cards.forEach(card => {
    card.addEventListener('click', () => {
      if (card === activeCard) {
        card.classList.remove('flipped');
        activeCard = null;
        return;
      }
      if (activeCard) activeCard.classList.remove('flipped');
      card.classList.add('flipped');
      activeCard = card;
    });
  });

  // create standard 52-card deck
  const suits = ['♠','♥','♦','♣'];
  const ranks = ['A','2','3','4','5','6','7','8','9','10','J','Q','K'];
  let deck = [];
  suits.forEach(suit => ranks.forEach(rank => deck.push(rank+suit)));
  deck.sort(() => Math.random() - 0.5);

  // assign card corners
  cards.forEach((card, index) => {
    let label = deck[index % deck.length];
    let rank = label.slice(0, -1);
    let suit = label.slice(-1);

    const topLeft = document.createElement('div');
    topLeft.className = 'card-corner top-left';
    topLeft.innerHTML = `<span class="rank">${rank}</span><span class="suit">${suit}</span>`;

    const bottomRight = document.createElement('div');
    bottomRight.className = 'card-corner bottom-right';
    bottomRight.innerHTML = `<span class="rank">${rank}</span><span class="suit">${suit}</span>`;

    if (suit==='♥' || suit==='♦') {
      topLeft.querySelector('.suit').classList.add('heart');
      bottomRight.querySelector('.suit').classList.add('heart');
    } else {
      // spades/clubs: random black shade
      let blackShade = Math.random() > 0.5 ? '#000000' : '#222222';
      topLeft.querySelector('.suit').style.color = blackShade;
      topLeft.querySelector('.rank').style.color = blackShade;
      bottomRight.querySelector('.suit').style.color = blackShade;
      bottomRight.querySelector('.rank').style.color = blackShade;
    }

    card.querySelector('.card-back').appendChild(topLeft);
    card.querySelector('.card-back').appendChild(bottomRight);
  });

  // reshuffle button
  if (reshuffleBtn) {
    reshuffleBtn.addEventListener('click', () => {
      if (activeCard) {
        activeCard.classList.remove('flipped');
        activeCard = null;
      }

      cards.forEach((card, i) => {
        setTimeout(() => card.classList.add('shuffling'), i * 50);
      });

      setTimeout(() => {
        const parent = cards[0].parentNode;
        const shuffled = cards.sort(() => Math.random() - 0.5);
        shuffled.forEach(c => parent.appendChild(c));

        shuffled.forEach((card, i) => {
          setTimeout(() => card.classList.remove('shuffling'), i * 50);
        });
      }, 400 + cards.length * 50);
    });
  }
});
</script>

{% schema %}
{
  "name": "Blend Oracle Cards",
  "settings": [
    {"type":"text","id":"section_title","label":"Section Title","default":"Discover"},
    {"type":"textarea","id":"section_subtitle","label":"Section Subtitle","default":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin malesuada sapien sit amet ultricies."},
    {"type":"color","id":"section_background_color","label":"Section Background","default":"#1a1a2e"},
    {"type":"color","id":"text_color","label":"Text Color","default":"#ffffff"},
    {"type":"color","id":"card_closed_background","label":"Card Back Background","default":"#16213e"},
    {"type":"color","id":"card_border_color","label":"Card Border Color","default":"#3b4b6b"},
    {"type":"color","id":"card_glow_color","label":"Card Glow Color","default":"#fbbf24"},
    {"type":"color","id":"card_title_color","label":"Card Title Color","default":"#fbbf24"},
    {"type":"color","id":"card_body_color","label":"Card Body Color","default":"#e2e8f0"},
    {"type":"number","id":"card_title_size","label":"Card Title Size (px)","default":18},
    {"type":"number","id":"card_body_size","label":"Card Body Size (px)","default":14},
    {"type":"number","id":"card_padding","label":"Card Padding","default":12},
    {"type":"number","id":"card_border_radius","label":"Card Border Radius","default":12},
    {"type":"text","id":"reshuffle_text","label":"Shuffle Button Text","default":"Shuffle"},
    {"type":"color","id":"btn_background_color","label":"Button Background","default":"#fbbf24"},
    {"type":"color","id":"btn_text_color","label":"Button Text","default":"#1a1a2e"},
    {"type":"color","id":"btn_border_color","label":"Button Border Color","default":"#fbbf24"},
    {"type":"number","id":"btn_border_width","label":"Button Border Width","default":2},
    {"type":"number","id":"btn_text_size","label":"Button Text Size","default":16},
    {"type":"number","id":"btn_padding_horizontal","label":"Button Horizontal Padding","default":20},
    {"type":"number","id":"btn_padding_vertical","label":"Button Vertical Padding","default":10},
    {"type":"number","id":"btn_spacing","label":"Button Spacing","default":20},
    {"type":"color","id":"shine_color_1","label":"Shine Color 1","default":"#ffffff"},
    {"type":"color","id":"shine_color_2","label":"Shine Color 2","default":"#ffffff"},
    {"type":"number","id":"shine_opacity","label":"Shine Opacity","default":15},
    {"type":"number","id":"shine_duration","label":"Shine Duration (s)","default":4},
    {"type":"checkbox","id":"show_reshuffle","label":"Show Shuffle Button","default":true}
  ],
  "blocks":[
    {
      "type":"oracle_card",
      "name":"Oracle Card",
      "settings":[
        {"type":"text","id":"blend_name","label":"Blend Name","default":"Mystic"},
        {"type":"textarea","id":"reflection_text","label":"Card Reflection Text","default":"Lorem ipsum dolor sit amet, consectetur adipiscing elit."},
        {"type":"text","id":"open_card_title","label":"Open Card Title","default":"Mystic"},
        {"type":"textarea","id":"open_card_content","label":"Open Card Content","default":"Lorem ipsum dolor sit amet, consectetur adipiscing elit."},
        {"type":"color","id":"card_open_background","label":"Card Front Background","default":"#0f172a"},
        {"type":"text","id":"cta_text","label":"Call To Action Text","default":"Go"},
        {"type":"url","id":"cta_link","label":"Call To Action Link","default":"/"},
        {"type":"image_picker","id":"card_back_image","label":"Card Back Image"}
      ]
    }
  ],
  "presets":[{"name":"Blend Oracle Cards","blocks":[{"type":"oracle_card"},{"type":"oracle_card"},{"type":"oracle_card"}]}]
}
{% endschema %}
